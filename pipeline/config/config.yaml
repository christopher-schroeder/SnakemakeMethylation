samples: config/samples.tsv

units: config/units.tsv

experiments: config/experiments.yaml

igv_report:
  activate: false

ref:
  # Number of chromosomes to consider for calling.
  # The first n entries of the FASTA will be considered.
  n_chromosomes: 25
  # Ensembl species name
  species: homo_sapiens
  # Ensembl release
  release: 100
  # Genome build
  build: GRCh38


# # Estimation of tumor mutational burden.
# tmb:
#   activate: false
#   # Size of the sequenced coding genome for TMB estimation
#   # Attention: when doing panel sequencing, set this to the
#   # CAPTURED coding genome, not the entire one!
#   coding_genome_size: 3e7
#   # Plotting modes - hist (stratified histogram)
#   # or curve (stratified curve)
#   mode:
#     - hist
#     - curve
#   # Name of the tumor sample in the scenario.yaml.
#   tumor_sample: tumor
#   somatic_events:
#     - SOMATIC_TUMOR_LOW
#     - SOMATIC_TUMOR_MEDIUM
#     - SOMATIC_TUMOR_HIGH

# # printing of variants in a matrix, sorted by recurrence
# report:
#   # if stratificatio is deactivated, one oncoprint for all
#   # samples will be created.
#   activate: false
#   max_read_depth: 250
#   stratify:
#     activate: false
#     # select a sample sheet column for stratification
#     by-column: condition

# # printing of variants in a table format
# tables:
#   activate: true
#   # vembrane expression to generate the table
#   output:
#     expression: "INDEX, CHROM, POS, REF, ALT[0], ANN['Consequence'], ANN['IMPACT'], ANN['SYMBOL'], ANN['Feature'], ANN['gnomad_AF']"
#     genotype: true
#     coverage: true
#     event_prob: true
#   generate_excel: true

# calling:
#   delly:
#     activate: false
#   freebayes:
#     activate: true
#   # See https://varlociraptor.github.io/docs/calling/#generic-variant-calling
#   scenario: config/scenario.yaml
#   filter:
#     # Filter candidate variants (this filter helps to keep the number of evaluated candidates small).
#     # It should ideally generate a superset of all other filters defined below.
#     # Annotation of candidate variants tries to be as fast as possible, only using VEP
#     # default parameters.
#     candidates: "(QUAL > 1) and (not ANN['gnomad_AF'] or float(ANN['gnomad_AF']) < 0.001)"
#     # Add any number of named filters here. They will be applied independenty,
#     # and can be referred in FDR control below to generate calls for different events.
#     # In particular, you can also filter by ID or dbsnp annotations here.
#     # See http://snpeff.sourceforge.net/SnpSift.html#filter
#     lowgnomad: "not ANN['gnomad_AF'] or float(ANN['gnomad_AF']) < 0.001"
#   fdr-control:
#     threshold: 1.0
#     events: 
#       # Add any number of events here to filter for.
#       denovo:
#         varlociraptor:
#           - "denovo"
#         filter: lowgnomad
#       exist_brain:
#         varlociraptor:
#           - "mosaik_brain"
#           - "denovo"
#         filter: lowgnomad
#       # denovo:
#       #   varlociraptor:
#       #     - "denovo"
#       #   filter: lowgnomad
#       # rezessive_homozygous:
#       #   varlociraptor:
#       #     - "rezessive_homozygous"
#       #   filter: lowgnomad
#       # compound_het_candidates:
#       #   varlociraptor:
#       #     - "pos_ch_mother_strong"
#       #     - "pos_ch_father_strong"
#       #     - "pos_ch_weak"
#       #   filter: lowgnomad
#       # other:
#       #   varlociraptor:
#       #     - "other"
#       #   filter: lowgnomad
#         #filter: filtername

# # Will be ignored if calc_consensus_reads is activated
# remove_duplicates:
#   activate: true

# calc_consensus_reads:
#   activate: true

# annotations:
#   vcfs:
#     activate: true
#     # annotate with known variants from ensembl
#     # known: resources/variation.vcf.gz
#     gnomad:
#       filename: resources/gnomad.genomes.r3.0.sites.allpop.nochr.vcf.gz
#       fields:
#         - AC
#         - AN
#         - AF
#     # intsplice: resources/intsplice_hg38.vcf.gz
#     # add more external VCFs as needed
#     # cosmic: path/to/cosmic.vcf.gz
#   dgidb:
#     activate: false
#     # List of datasources for filtering dgidb entries
#     # Available sources can be found on http://dgidb.org/api/v2/interaction_sources.json
#     datasources:
#       - DrugBank
#   vep:
#     # Consider removing --everything if VEP is slow for you (e.g. for WGS), 
#     # and think carefully about which annotations you need.
#     params: ""
#     plugins:
#       # Add any plugin from https://www.ensembl.org/info/docs/tools/vep/script/vep_plugins.html
#       # Plugin args can be passed as well, e.g. "LoFtool,path/to/custom/scores.txt".
#       - LoFtool

params:
  cutadapt: "-m 10"
#   picard:
#     MarkDuplicates: "VALIDATION_STRINGENCY=LENIENT"
#   gatk:
#     BaseRecalibrator: ""
#     applyBQSR: ""
#   varlociraptor_preprocess:
#     max_depth: 200 # Set when processing panel data with high coverage
#   varlociraptor_call:
#     omit_read_bias: false # Set true when processing panel data
#   freebayes:
#     min_alternate_fraction: 0.05 # Reduce for calling variants with lower VAFs
